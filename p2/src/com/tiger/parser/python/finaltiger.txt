program → let declseg in stmts end (1)
declseg → typedecls vardecls funcdecls (2)
typedecls → ϵ (3)
typedecls → typedecl typedecls (4)
typedecl → type id := type ; (5)
type → boolean (6)
type → int (7)
type → float (8)
type → unit (9)
type → id (10)
type → array [ intlit ] of type (11)
vardecls → ϵ (12)
vardecls → vardecl vardecls (13)
vardecl → var ids : type optinit ; (14)
ids → id ids_lf (15)
optinit → ϵ (16)
optinit → := const (17)
funcdecls → ϵ (18)
funcdecls → funcdecl funcdecls (19)
funcdecl → func id ( params ) : type begin stmts end ; (20)
params → ϵ (21)
params → neparams (22)
neparams → param neparams_lf (23)
param → id : type (24)
stmts → fullstmt stmts_lf (25)
fullstmt → stmt ; (26)
stmt → lvalue := expr (27)
stmt → while expr do stmts enddo (28)
stmt → for id := expr to expr do stmts enddo (29)
stmt → break (30)
stmt → return expr (31)
stmt → if expr then stmts stmt_lf (32)
lvalue → id optoffset (33)
optoffset → ϵ (34)
optoffset → [ expr ] (35)
exprs → ϵ (36)
exprs → neexprs (37)
neexprs → expr neexprs_lf (38)
expr → clause expr' (39)
clause → pred clause' (40)
pred → aexpr pred_lf (41)
cmp → = (42)
cmp → <> (43)
cmp → <= (44)
cmp → >= (45)
cmp → < (46)
cmp → > (47)
aexpr → term aexpr' (48)
linop → + (49)
linop → - (50)
term → factor term' (51)
nonlinop → * (52)
nonlinop → / (53)
factor → const (54)
factor → ( expr ) (55)
factor → id factor_lf (56)
const → true (57)
const → false (58)
const → _ (59)
const → intlit (60)
const → floatlit (61)
stmts_lf → ϵ (62)
stmts_lf → stmts (63)
pred_lf → ϵ (64)
pred_lf → cmp aexpr (65)
term' → nonlinop factor term' (66)
term' → ϵ (67)
ids_lf → ϵ (68)
ids_lf → , ids (69)
factor_lf → ϵ (70)
factor_lf → [ expr ] (71)
factor_lf → ( exprs ) (72)
expr' → | clause expr' (73)
expr' → ϵ (74)
neexprs_lf → ϵ (75)
neexprs_lf → , neexprs (76)
neparams_lf → ϵ (77)
neparams_lf → , neparams (78)
clause' → & pred clause' (79)
clause' → ϵ (80)
stmt_lf → endif (81)
stmt_lf → else stmts endif (82)
aexpr' → linop term aexpr' (83)
aexpr' → ϵ (84)
